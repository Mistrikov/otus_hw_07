version: "3"

services:
  pg:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      #PGUSER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 10s
      retries: 5

  redishost:
    image: redis:7
    # command: redis-server --requirepass sOmE_sEcUrE_pAsS
    # environment:
    #  REDIS_HOST: queque
    #  REDIS_PORT: 6379
    #  REDIS_PASSWORD: sOmE_sEcUrE_pAsS
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
    expose:
      - 8081
    environment:
      PGDB: "${POSTGRES_DB}"
      PGUSER: "${POSTGRES_USER}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
    command: bash -c "
      python manage.py migrate --settings=settings.prod_settings
      && python manage.py fill_db --settings=settings.prod_settings
      && python manage.py runserver 0.0.0.0:8081 --settings=settings.prod_settings
      "
      # && gunicorn settings.wsgi -b 0.0.0.0:8081 --access-logfile - --log-file - --log-level INFO
      # python manage.py runserver 0.0.0.0:8081 --settings=settings.prod_settings
    depends_on:
      pg:
        condition: service_healthy
  
  nginx:
    build: 
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - 8000:80
    depends_on:
      - backend

